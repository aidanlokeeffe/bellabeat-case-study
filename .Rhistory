separate(employee, name, into=c("first_name", "last_name"), sep=" ")
employee
# Want to separate first and last name
employee <- separate(employee, name, into=c("first_name", "last_name"), sep=" ")
employee
employee <- unite(employee, "name", first_name, last_name, sep=" ")
employee
# New variables
install.packages("palmerpengiuns")
library(palmerpenguins)
View(penguins)
penguins %>%
mutate(body_mass_kg=body_mass_g/1000)
penguins
penguins %>%
mutate(body_mass_kg=body_mass_g/1000, flipper_length_mm/1000)
colnames(penguins)
penguins2 <- penguins %>%
mutate(body_mass_kg=body_mass_g/1000, flipper_length_mm/1000)
colnames(penguins2)
penguins2 <- penguins %>%
mutate(body_mass_kg=body_mass_g/1000, flipper_length_m=flipper_length_mm/1000)
colnames(penguins2)
penguins
arrange(penguins, bill_length_mm)
install.packages("Tmisc")
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
ggplot(quartet,
aex(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(-set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(-set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(-quartet$set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(quartet$set))
+facet_wrap(quartet$set))
+facet_wrap(quartet$set)
ggplot(quartet,aes(x,y)) + geom_point() +
geom_smooth(method=lm, se=FALSE) +
facet_wrap(quartet$set)
install.packages("datasauRus")
library(datasauRus)
ggplot(datasaurus_dozen,aes(x=x,y=y,color=dataset)) +
geom_point() +
theme_void() +
theme(legend.position="none")+
facet_wrap(~dataset)
install.packages("simdesign")
install.packages("SimDesign")
library(SimDesign)
library("SimDesign")
actual_temp <- c(68.3,70,72.4,71,67,70)
install.packages("SimDesign")
library("SimDesign")
actual_temp <- c(68.3,70,72.4,71,67,70)
predicted_temp <- c(67.9, 69, 71.5, 70,67, 69)
bias(actual_temp, predicted_temp)
actual_sales <- c(150, 203, 137, 247, 116, 287)
predicted_sales <- c(200, 300, 150, 250, 150, 300)
bias(actual_sales, predicted_sales)
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
hotel_bookings <- read_csv("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 7/2023-01-11_hotel_bookings_1.csv")
head(hotel_bookings)
(hotel_bookings)
glimpse()
glimpse(hotel_bookings)
colnames(hotel_bookings)
arrange(hotel_bookings, -lead_time)
head(hotel_bookings)
hotel_bookings_v2 <-
arrange(hotel_bookings, desc(lead_time))
head(hotel_bookings_v2)
max(hotel_bookings$lead_time)
min(hotel_bookings$lead_time)
min(lead_time)
mean(hotel_bookings$lead_time)
mean(hotel_bookings_v2$lead_time)
hotel_bookings_city <-
filter(hotel_bookings, hotel_bookings$hotel=="City Hotel")
head(hotel_bookings_city)
mean(hotel_bookings_city$lead_time)
hotel_summary <-
hotel_bookings %>%
group_by(hotel) %>%
summarise(average_lead_time=mean(lead_time),
min_lead_time=min(lead_time),
max_lead_time=max(lead_time))
head(hotel_summary)
penguins %>%
drop_na() %>%
group_by(species) %>%
summarize(max_flipper_length = max(flipper_length_mm))
install.packages("tidyverse", "PalmerPenguins")
install.packages("tidyverse")
install.packages("palmerpenguins")
library(tidyverse)
library(palmerpenguins)
data(palmerpenguins)
data(penguins)
force(penguins)
force(penguins_raw)
View(penguins_raw)
View(penguins_raw)
View(penguins)
View(penguins)
View(penguins_raw)
View(penguins_raw)
delete(penguins_raw)
del(penguins_raw)
remove(penguins_raw)
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aex(x=flipper_length_mm,y=body_mass_g))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
hotel_bookings <- read.csv("hotel_bookings.csv")
hotel_bookings <- read.csv("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 7/2023-01-11_hotel_bookings_1.csv")
head(hotel_bookings)
colnames(hotel_bookings)
install.packages('ggplot2')
library(ggplot2)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
hotel_bookings <- drop_na(hotel_bookings)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
hotel_bookings <- read.csv("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 7/2023-01-11_hotel_bookings_1.csv")
install.packages('ggplot2')
library(ggplot2)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = stays_in_weekend_nights, y = children))
library(tidyverse)
library(palmerpenguins)
data(penguins)
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, color=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species, color=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species, color=species, size=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, alpha=species))
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g),color="purple")
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g),color="purple")ggplot(data=penguins) +
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g),color="purple")ggplot(data=penguins) +
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species, size=species, alpha=species))
library(tidyverse)
library(palmerpenguins)
data(penguins)
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g))
# Using smooth instead of line
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g))+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))
# Plot a separate line for each species
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g,linetype=species))
# Plot a separate line for each species
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g,color=species))
ggplot(data=penguins)+
geom_jitter(mapping=aes(flipper_length_mm,y=body_mass_g))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), color="blue")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), fill="blue")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), fill="cyan")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), fill="dark green")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut, fill=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut, fill=clarity))
# Facets
ggplot(data=penguins)+
facet_wrap(~species)
# Facets
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))
# Facets
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))+
facet_wrap(~species)
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut, fill=clarity))+
facet_wrap(~cut)
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut))+
facet_wrap(~cut)
# Two have two facets
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(sex~species)
hotel_bookings <- read.csv("hotel_bookings.csv")
hotel_bookings <- read.csv("hotel_bookings.csv")
head(hotel_bookings)
colnames(hotel_bookings)
install.packages('ggplot2')
library(ggplot2)
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel, fill=deposit_type))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel, fill=market_segment))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type )
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~market_segment) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_grid(~deposit_type) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type~market_segment) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
onlineta_city_hotels_v2 <- hotel_bookings %>%
filter(hotel=="City Hotel") %>%
filter(market_segment=="Online TA")
View(onlineta_city_hotels_v2)
library(tidyverse)
library(palmerpenguins)
data(penguins)
data(penguins)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmber Penguins: Body Mas vs. Flipper Length")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmber Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest", color="purple", fontface="bold")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest", color="purple", fontface="bold", angle=25)
p<-ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest", color="purple", fontface="bold", angle=25)
p+annotate("text",x=0,y=0,label="AAAAA")
# For test
ggplot(data = penguins) +
geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g)) +
labs(title="Penguins")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = color, fill = cut)) +
facet_wrap(~cut)
install.packages("rmarkdown")
library(rmarkdown)
a = c(1,2,3)
b=c(4,5,6)
df = data.frame(a,b)
df
df %>%
rename(c=a)
# Change working directory
setwd("C:/Users/aidan/OneDrive/Desktop/bellabeat-case-study")
# Load in packages
install.packages("tidyverse")
library(tidyverse)
# I want to collect the number of days which each user used each functionality
weight <- read_csv("fitabase-data-4.12.16-5.12.16/weight.csv")
day_sleep <- read_csv("fitabase-data-4.12.16-5.12.16/day_sleep.csv")
day_activity <- read_csv("fitabase-data-4.12.16-5.12.16/day_activity.csv")
ids <- union(union(weight$Id,day_sleep$Id),day_activity$Id)
ids <- sort(ids)
length(ids) # It's 33
day_counts <- data.frame(Id=ids)
View(day_counts)
day_counts$WeightDays <- rep(0,33)
day_counts$SleepDays <- rep(0,33)
day_counts$ActivityDays <- rep(0,33)
View(day_counts)
ids(1)
ids[i]
ids[1]
for (i in 1:len(ids)) {
id <- ids[i]
weight_count <- sum(weight$Id == id)
sleep_count <- sum(day_sleep$Id == id)
activity_count <- sum(day_activity$Id == id)
day_counts[i,"WeightDays"] = weight_count
day_counts[i,"SleepDays"] = sleep_count
day_counts[i,"ActivityDays"] = activity_count
}
for (i in 1:length(ids)) {
id <- ids[i]
weight_count <- sum(weight$Id == id)
sleep_count <- sum(day_sleep$Id == id)
activity_count <- sum(day_activity$Id == id)
day_counts[i,"WeightDays"] = weight_count
day_counts[i,"SleepDays"] = sleep_count
day_counts[i,"ActivityDays"] = activity_count
}
write.csv(day_counts, file="transformed-data/days-for-user-for-activity.csv")
write.csv(day_counts, file="transformed-data/days-for-user-for-activity.csv", row.names = FALSE)
# Now that that is written, let's clear the environment and load it in
day_counts <- read_csv("transformed-data/functionality-use-days.csv")
View(day_counts)
summary(day_counts)
mean(day_counts)
mean(day_counts,axis=1)
day_counts$WeightDays <- day_counts$WeightDays/31
day_counts$ActivityDays <- day_counts$ActivityDays/31
# Now that that is written, let's clear the environment and load it in
day_counts <- read_csv("transformed-data/functionality-use-days.csv")
day_counts$WeightDays <- day_counts$WeightDays/31
day_counts$SleepDays <- day_counts$SleepDays/31
day_counts$ActivityDays <- day_counts$ActivityDays/31
write.csv(day_counts, file="transformed-data/functionality-use-percent.csv", row.names = FALSE)
("transformed-data/functionality-use-days.csv")
# Now that that is written, let's clear the environment and load it in
day_counts <- read_csv("transformed-data/functionality-use-days.csv")
summary(day_counts)
day_counts$WeightDays <- day_counts$WeightDays/31 * 100
day_counts$SleepDays <- day_counts$SleepDays/31 * 100
day_counts$ActivityDays <- day_counts$ActivityDays/31 * 100
write.csv(day_counts, file="transformed-data/functionality-use-percent.csv", row.names = FALSE)
# Now, we'll work with the proportion data instead
View(day_counts)
summary(day_counts)
hist(day_counts$WeightDays)
hist(day_counts$SleepDays)
hist(day_counts$ActivityDays)
std(day_counts$WeightDays)
stdev(day_counts$ActivityDays)
sd(day_counts$WeightDays)
sd(day_counts$WeightDays)
sd(day_counts$SleepDays)
sd(day_counts$ActivityDays)
sd(day_counts$WeightDays)
sd(day_counts$SleepDays)
sd(day_counts$ActivityDays)
summary(day_counts)
# Now that I think about it, are calories and activity the same?
day_calories <- read_csv("fitabase-data-4.12.16-5.12.16/day_calories.csv")
ggplot(data = summary(day_counts)) +
geom_bar(mapping=aes(x=c("Weight","Sleep","Activity"), y=c(0.000, 16.13, 100.00)))
ggplot(data = data.frame(summary(day_counts)) +
ggplot(data = data.frame(summary(day_counts))) +
geom_bar(mapping=aes(x=c("Weight","Sleep","Activity"), y=c(0.000, 16.13, 100.00)))
median_use <- data.frame(0)
median_use <- data.frame(Weight=0)
median_use$Sleep <- 16.13
median_use$Activity <- 100.00
View(median_use)
barplot(median_use)
View(median_use)
ggplot(data = data.frame(summary(day_counts))) +
geom_bar(mapping=aes(x=c("Weight","Sleep","Activity"), y=c(0.000, 16.13, 100.00)))
ggplot(data = median_use) +
geom_bar(mapping=aes(x=c("Weight","Sleep","Activity"), y=c(0.000, 16.13, 100.00)))
median_use = data.frame(Functionality=c("Weight", "Sleep", "Activity"))
median_use$Median = c(0,16.13,100)
ggplot(data = median_use) +
geom_bar(mapping=aes(x=Functionality, y=Median))
ggplot(data = median_use) +
geom_bar(mapping=aes(y=Median))
ggplot(data = median_use) +
geom_bar(mapping=aes(x=Median))
ggplot(data = median_use) +
geom_bar(mapping=aes(x=Functionality))
ggplot(data = median_use) +
geom_bar(mapping=aes(x=Functionality))
ggplot(data = median_use) +
geom_bar(mapping=aes(x=Functionality, height=Median))
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.01,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.05,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use = data.frame(Functionality=c("Weight", "Sleep", "Activity"))
median_use$Median = c(0.05,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.1,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.5,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.4,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.3,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
median_use$Median = c(0.2,16.13,100)
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median))
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median, size=1))
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median, color="blue"))
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median, fill="blue"))
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="blue")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="dark green")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green3")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(xlabel="x", ylabel="y", title="title")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(xlabel="Functionality", ylabel="Median", title="title")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(xlabel="Functionality", ylabel="Percentage", title="Median ")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(xlab="Functionality", ylab="Percentage", title="Median ")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(x="Functionality", y="Percentage", title="Median ")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(x="Functionality", y="Percentage", title="Median Percentage of Days that Each FUnctionality was Used")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2") +
labs(x="Functionality", y="Percentage", title="Median Percentage of Days that Each Functionality was Used")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2", size=1) +
labs(x="Functionality", y="Percentage", title="Median Percentage of Days that Each Functionality was Used")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2", size=.5) +
labs(x="Functionality", y="Percentage", title="Median Percentage of Days that Each Functionality was Used")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2", width=1) +
labs(x="Functionality", y="Percentage", title="Median Percentage of Days that Each Functionality was Used")
ggplot(data = median_use) +
geom_col(mapping=aes(x=Functionality, y=Median), fill="green2", width=.5) +
labs(x="Functionality", y="Percentage", title="Median Percentage of Days that Each Functionality was Used")
percentile(day_counts$SleepDays, 0)
quantile(day_counts$SleepDays, 0)
sum(day_counts$SleepDays[day_counts$SleepDays <=0])/length(day_counts$SleepDays)
sum(day_counts$WeightDays[day_counts$WeightDays <=0])/length(day_counts$WeightDays)
sum(day_counts$WeightDays[day_counts$WeightDays <=0])
sum(day_counts$WeightDays <= 0) / length(day_counts$WeightDays)
sum(day_counts$SleepDays <= 0) / length(day_counts$SleepDays)
